/* Copyright (C) 2025, The Linux Box Corporation
 * Contributor : Avani Rateria <arateria@redhat.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301 USA
 *
 * -------------
 */

syntax = "proto3";

package nfsService;

// Get the connected client ids
service GetClientId {
    rpc GetClientIds (GetClientIdsRequest) returns (GetClientIdsResponse);
}

message GetClientIdsRequest {
}

message GetClientIdsResponse {
    repeated uint64 client_ids = 1;  // List of client IDs
}

// Grace related requests

// Get if nfs in grace
service GetNfsGrace {
    rpc GetGracePeriod (GetNfsGraceRequest) returns (GetNfsGraceResponse);
}

message GetNfsGraceRequest {
}

message GetNfsGraceResponse {
    optional bool ingrace = 1;  // Whether the system is in grace period
}

// Invoke grace period on the NFS Ganesha
service StartNfsGrace {
    rpc StartGraceWithEvent (GraceWithEvent) returns (GraceStatus);
}

message GraceWithEvent {
    int32 Event = 1;
    int32 NodeId = 2;
    string IpAddr = 3;
}

message GraceStatus {
    bool graceStarted = 1;
    string response_msg = 2;
}

// Get session ids 
service GetSessionId {
    rpc GetSessionIds (GetSessionIdsRequest) returns (GetSessionIdsResponse);
}

message GetSessionIdsRequest {
}

message GetSessionIdsResponse {
    repeated string session_ids = 1;
}
